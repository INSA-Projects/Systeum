head     1.1;
branch   1.1.1;
access   ;
symbols  v0:1.1.1.1 Base:1.1.1;
locks    ; strict;
comment  @ * @;


1.1
date     2005.10.17.18.33.29;  author pgarcia;  state Exp;
branches 1.1.1.1;
next     ;

1.1.1.1
date     2005.10.17.18.33.29;  author pgarcia;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@/*! \file  process.h
    \brief A process keeps track of the resources used by a running
           Nachos program
  
        The resources considered are the memory (addrspace.h), the
        processor (thread.h), the open files, the statistics, ...
*/

#ifndef PROCESS_H
#define PROCESS_H

#include "copyright.h"
#include "openfile.h"
#include "synch.h"
#include "stats.h"
#include "addrspace.h"

class AddrSpace;
class Thread;
class Semaphore;

/*! \brief Defines the data structures to keep track of the execution
 environment of a user program */
class Process {
public:
  /*!
   * Create an address space, initializing it with the program stored
   * in the file "executable", without any thread in it.
   */
  Process(char *fileName, int *err);

  ~Process();	

  /*! Pointer on the executable file (may be NULL) */
  OpenFile *execFile;
  
  AddrSpace * addrSpace;              /*!< Pointer to the address space */

  int numThreads;                     /*!< Number of threads attached
                                        to this process */
         
  ProcessStat *stat;                  /*!< Statistics concerning this
                                        process */

  char * GetName() {return(name);}    /*!< Returns the process name */

private:
  char *name;
};

#endif // PROCESS_H
@


1.1.1.1
log
@creation nachos 2005
@
text
@@
